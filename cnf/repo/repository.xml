<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20120213124231.861' name='Local Repository'>
  <resource id='biz.aQute.bnd/1.45.0' presentationname='bnd' symbolicname='biz.aQute.bnd' uri='biz.aQute.bnd/biz.aQute.bnd-1.45.0.jar' version='1.45.0'>
    <description>
      A utility and plugin to wrap, build, print, or otherwise manipulate
       bundles
    </description>
    <size>
      1164904
    </size>
    <license>
      http://www.opensource.org/licenses/apache2.0.php; description="All
       files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt)."; link=LICENSE
    </license>
    <copyright>
      All files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt).
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='bnd'/>
      <p n='symbolicname' v='biz.aQute.bnd'/>
      <p n='version' t='version' v='1.45.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.service'/>
      <p n='version' t='version' v='1.44.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.service.action'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.bindex'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.ui.ide)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.ui.ide; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jface.text)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jface.text; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.ui.workbench.texteditor)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.ui.workbench.texteditor; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.ui.editors)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.ui.editors; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.ui)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.ui; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.debug.ui)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.debug.ui; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jdt.core)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jdt.core; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jdt.ui)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jdt.ui; [3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.core.runtime)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.core.runtime; [3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jdt.launching)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jdt.launching; [3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jdt.debug.ui)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jdt.debug.ui; [3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.jdt.junit)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.jdt.junit; [3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.junit)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.junit; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.osgi.services)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.osgi.services; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.apache.ant)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.apache.ant; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(symbolicname=org.eclipse.ui.console)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Require Bundle org.eclipse.ui.console; 0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.bindex)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.bindex ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='biz.aQute.bnd.annotation/1.45.0' presentationname='bnd Annotations Library' symbolicname='biz.aQute.bnd.annotation' uri='biz.aQute.bnd.annotation/biz.aQute.bnd.annotation-1.45.0.jar' version='1.45.0'>
    <description>
      Contains only the annotations for bnd.
    </description>
    <size>
      29270
    </size>
    <license>
      http://www.opensource.org/licenses/apache2.0.php; description="All
       files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt)."; link=LICENSE
    </license>
    <documentation>
      http://www.aQute.biz/Code/Bnd
    </documentation>
    <copyright>
      All files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt).
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='bnd Annotations Library'/>
      <p n='symbolicname' v='biz.aQute.bnd.annotation'/>
      <p n='version' t='version' v='1.45.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation.component'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation.metatype'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
  </resource>
  <resource id='biz.aQute.bndlib/1.44.22' presentationname='bnd - Bundle Tool' symbolicname='biz.aQute.bndlib' uri='biz.aQute.bndlib/biz.aQute.bndlib-1.44.22.jar' version='1.44.22'>
    <description>
      A Swiss Army Knife for OSGi
    </description>
    <size>
      823639
    </size>
    <license>
      http://www.opensource.org/licenses/apache2.0.php; description="Apache
       Software License 2.0"; link=http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.aQute.biz/Code/Bnd
    </documentation>
    <copyright>
      Copyright Â© aQute SARL (2000, 2011). All Rights Reserved.
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='bnd - Bundle Tool'/>
      <p n='symbolicname' v='biz.aQute.bndlib'/>
      <p n='version' t='version' v='1.44.22'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation.metatype'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.annotation.component'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.lib.osgi'/>
      <p n='uses' v='aQute.bnd.annotation,aQute.libg.version,aQute.bnd.service,aQute.libg.header,aQute.bnd.annotation.metatype,aQute.libg.reporter,aQute.libg.sed,aQute.libg.qtokens'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.build'/>
      <p n='uses' v='aQute.bnd.service,aQute.lib.osgi,aQute.libg.reporter,aQute.libg.header,aQute.bnd.service.action,aQute.libg.sed,javax.naming'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.service'/>
      <p n='uses' v='aQute.lib.osgi,aQute.bnd.build,aQute.libg.reporter,aQute.libg.version'/>
      <p n='version' t='version' v='1.44.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.bnd.service.action'/>
      <p n='uses' v='aQute.bnd.build'/>
      <p n='version' t='version' v='1.43.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.reporter'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.version'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.sed'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.header'/>
      <p n='uses' v='aQute.libg.reporter,aQute.libg.qtokens'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.qtokens'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='aQute.libg.sax'/>
      <p n='uses' v='org.xml.sax,javax.xml.transform,javax.xml.parsers,javax.xml.transform.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.bindex'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.bindex)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.bindex ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='biz.aQute.junit/1.0.0' presentationname='biz.aQute.junit' symbolicname='biz.aQute.junit' uri='biz.aQute.junit/biz.aQute.junit-1.0.0.jar' version='1.0.0'>
    <size>
      67095
    </size>
    <license>
      http://www.opensource.org/licenses/apache2.0.php; description="All
       files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt)."; link=LICENSE
    </license>
    <copyright>
      All files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt).
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='biz.aQute.junit'/>
      <p n='symbolicname' v='biz.aQute.junit'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.framework'/>
      <p n='version' t='version' v='3.8.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=3.8.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package junit.framework ;version=[3.8.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='biz.aQute.launcher/1.0.0' presentationname='biz.aQute.launcher' symbolicname='biz.aQute.launcher' uri='biz.aQute.launcher/biz.aQute.launcher-1.0.0.jar' version='1.0.0'>
    <size>
      56534
    </size>
    <license>
      http://www.opensource.org/licenses/apache2.0.php; description="All
       files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt)."; link=LICENSE
    </license>
    <copyright>
      All files contained in this JAR are licensed under the Apache
       2.0 license, unless noted differently in their source (see
       swing2swt).
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='biz.aQute.launcher'/>
      <p n='symbolicname' v='biz.aQute.launcher'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=aQute.bnd.build)(version&gt;=1.43.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package aQute.bnd.build ;version=[1.43.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=aQute.bnd.service)(version&gt;=1.44.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package aQute.bnd.service ;version=[1.44.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=aQute.lib.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package aQute.lib.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=aQute.lib.osgi)(version&gt;=1.43.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package aQute.lib.osgi ;version=[1.43.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=aQute.libg.generics)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package aQute.libg.generics ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.launch)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.launch ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.permissionadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.permissionadmin ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.scr/1.6.0' presentationname='Apache Felix Declarative Services' symbolicname='org.apache.felix.scr' uri='org.apache.felix.scr/org.apache.felix.scr-1.6.0.jar' version='1.6.0'>
    <description>
      Implementation of the Declarative Services specification 1.1
    </description>
    <size>
      192368
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-service-component-runtime.html
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Declarative Services'/>
      <p n='symbolicname' v='org.apache.felix.scr'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.component'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.shell ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.metatype ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
  </resource>
  <resource id='org.mockito.mockito-all/1.8.5' presentationname='Mockito Mock Library for Java. Hamcrest-core &amp; Objenesis included in the bundle.' symbolicname='org.mockito.mockito-all' uri='org.mockito.mockito-all/org.mockito.mockito-all-1.8.5.jar' version='1.8.5'>
    <size>
      1439455
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Mockito Mock Library for Java. Hamcrest-core &amp; Objenesis included in the bundle.'/>
      <p n='symbolicname' v='org.mockito.mockito-all'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.stubbing'/>
      <p n='uses' v='org.mockito.invocation'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.verification.junit'/>
      <p n='uses' v='junit.framework,org.mockito.exceptions.verification'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.misusing'/>
      <p n='uses' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.invocation'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.runners'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.notification,org.junit.runner.manipulation'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.verification'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito'/>
      <p n='uses' v='org.hamcrest,org.mockito.stubbing,org.mockito.verification,org.mockito.exceptions.base,org.mockito.exceptions,org.mockito.configuration,org.mockito.invocation'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions'/>
      <p n='uses' v='org.mockito.exceptions.verification.junit,org.mockito.exceptions.base,org.mockito.exceptions.verification,org.mockito.exceptions.misusing'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.configuration'/>
      <p n='uses' v='org.mockito,org.mockito.stubbing'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.stubbing.answers'/>
      <p n='uses' v='org.mockito.exceptions.base,org.mockito.stubbing,org.mockito.invocation'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.verification'/>
      <p n='uses' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.8.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hamcrest'/>
      <p n='uses' v='org.hamcrest.core'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hamcrest.core'/>
      <p n='uses' v='org.hamcrest'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=COM.jrockit.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package COM.jrockit.reflect
    </require>
    <require extend='false' filter='(&amp;(package=jrockit.vm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package jrockit.vm
    </require>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package junit.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.hamcrest)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hamcrest ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.junit)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.internal.runners)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.internal.runners
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner.manipulation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner.manipulation
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner.notification)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner.notification
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runners)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runners
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runners.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runners.model
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.configuration)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.configuration ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.base)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.base ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.misusing)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.misusing ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.verification)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.verification ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.verification.junit)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.verification.junit ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.invocation)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.invocation ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.runners)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.runners ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.stubbing)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.stubbing ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.stubbing.answers)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.stubbing.answers ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.verification)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.verification ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objenesis)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.objenesis ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
  </resource>
  <resource id='org.osgi.impl.bundle.bindex/2.2.0' presentationname='org.osgi.impl.bundle.bindex' symbolicname='org.osgi.impl.bundle.bindex' uri='org.osgi.impl.bundle.bindex/org.osgi.impl.bundle.bindex-2.2.0.jar' version='2.2.0'>
    <description>
      Provides a command line utility to index a set of bundles.
       This code can be run from the command line.
    </description>
    <size>
      154617
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0;description="This
       material is licensed under the Apache Software License, Version
       2.0"; link="http://www.apache.org/licenses/LICENSE-2.0"
    </license>
    <copyright>
      (c) Copyright OSGi Alliance, contains licensed code from kXML
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.osgi.impl.bundle.bindex'/>
      <p n='symbolicname' v='org.osgi.impl.bundle.bindex'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.bindex'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.bindex)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.bindex ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='osgi.cmpn/4.2.0.200908310645' presentationname='osgi.cmpn' symbolicname='osgi.cmpn' uri='osgi.cmpn/osgi.cmpn-4.2.0.jar' version='4.2.0.200908310645'>
    <description>
      OSGi Service Platform Release 4 Version 4.2, Compendium Interfaces
       and Classes for use in compiling bundles.
    </description>
    <size>
      614152
    </size>
    <license>
      http://opensource.org/licenses/apache2.0.php; link="http://www.apache.org/licenses/LICENSE-2.0";
       description="Apache License, Version 2.0"
    </license>
    <copyright>
      Copyright (c) OSGi Alliance (2000, 2009). All Rights Reserved.
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='osgi.cmpn'/>
      <p n='symbolicname' v='osgi.cmpn'/>
      <p n='version' t='version' v='4.2.0.200908310645'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree.spi'/>
      <p n='uses' v='info.dmtree'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree.registry'/>
      <p n='uses' v='org.osgi.framework,info.dmtree,info.dmtree.notification'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree.notification.spi'/>
      <p n='uses' v='info.dmtree.notification'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree.security'/>
      <p n='uses' v='info.dmtree'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='info.dmtree.notification'/>
      <p n='uses' v='info.dmtree'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.application'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.application'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.deploymentadmin.spi'/>
      <p n='uses' v='org.osgi.service.deploymentadmin,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.deploymentadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.device'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.event'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.http'/>
      <p n='uses' v='javax.servlet.http,javax.servlet'/>
      <p n='version' t='version' v='1.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.io'/>
      <p n='uses' v='javax.microedition.io'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.metatype'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.monitor'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.prefs'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.provisioning'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.upnp'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.useradmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.wireadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.measurement'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.position'/>
      <p n='uses' v='org.osgi.util.measurement'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.cdma'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.condpermadmin'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.gsm'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.condpermadmin'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.mobile'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.condpermadmin'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.xml'/>
      <p n='uses' v='javax.xml.parsers,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=info.dmtree)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=info.dmtree.notification)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree.notification ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=info.dmtree.notification.spi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree.notification.spi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=info.dmtree.registry)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree.registry ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=info.dmtree.security)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree.security ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=info.dmtree.spi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package info.dmtree.spi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.microedition.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.microedition.io
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.application)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.application ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.application)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.application ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.component ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.condpermadmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.condpermadmin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.deploymentadmin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.deploymentadmin.spi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.deploymentadmin.spi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.device)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.device ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.http)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.http ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.metatype ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.monitor)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.monitor ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.prefs)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.prefs ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.provisioning)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.provisioning ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.upnp)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.upnp ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.useradmin ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.wireadmin)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.wireadmin ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.cdma)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.cdma ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.gsm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.gsm ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.measurement)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.measurement ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.mobile)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.mobile ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.position)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.position ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.xml)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.xml ;version=[1.0.0,2.0.0)
    </require>
  </resource>
</repository>